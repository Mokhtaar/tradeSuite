generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  password        String?
  emailVerified   DateTime?
  image           String?
  dob             DateTime?
  phoneNumber     Int?
  proofOfIdentity String?
  proofOfAddress  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  company         Company?  @relation(fields: [companyID], references: [id])
  companyID       Int?
  status          String?

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phoneNumber Int
  country     String
  city        String
  website     String
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  fileUpload  String?
  postalCode  Int
  users       User[]

  @@unique([id, name])
}

// model Project {
//   id                  Int      @id @default(autoincrement())
//   projectName         String
//   createdAt           DateTime @default(now())
//   updatedAt           DateTime @default(now())
//   projectDescription  String?
//   otherProjectDetails String?
//   company             Company  @relation(fields: [companyID], references: [id])
//   companyID           Int      @unique
// }
