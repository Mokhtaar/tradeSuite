generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  name            String
  companyID       Int?
  createdAt       DateTime  @default(now())
  dob             DateTime?
  password        String
  phoneNumber     Int?
  proofOfAddress  String?
  proofOfIdentity String?
  updatedAt       DateTime  @default(now())
  status          String?
  role            UserRole  @default(USER)
  accounts        Account[]
  sessions        Session[]
  company         Company?  @relation(fields: [companyID], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phoneNumber Int
  country     String
  city        String
  website     String
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  fileUpload  String?
  postalCode  Int
  media       Media[]
  users       User[]

  @@unique([id, name])
}

model Media {
  id                     Int      @id @default(autoincrement())
  incomeStatement        String?
  balanceSheet           String?
  cashFlow               String?
  supplierDetails        String?
  other                  String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @default(now())
  companyID              Int?
  bankStatement          String?
  pastOrders             String?
  previousYearlyInvoices String?
  yearlySales            String?
  status                 String? @default("Pending")
  company                Company? @relation(fields: [companyID], references: [id])
}

enum UserRole {
  ADMIN
  USER
}
